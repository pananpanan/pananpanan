ratio_all<-c(ratio_all,ratio)
}
if(all(ratio_all<0.5)){
sdExclude=c(sdExclude,i)
}
}
final=row.names(testN)[!row.names(testN) %in% sdExclude]
data2=data1[final,]
z<-data2
z1 <- apply(z, 1, function(x) {
length(unique(x))
})
sdExclude<-NULL
for(i in rownames(z)){
sd_all<-NULL
for(sdCls in 1:length(sampleindex)){
colPick<-as.character(sampleinfos[sampleindex[[sdCls]],1])
sd1<-sd(z[i,colPick])
sd_all<-c(sd1,sd_all)
}
if(all(sd_all<=0)){
sdExclude=c(sdExclude,i)
}
}
final <- row.names(z)[!row.names(z) %in% sdExclude]
data2 <- z[z1 != 1,]
data2=data2[final,]
for (i in rownames(data2)){
if(method=="t_test"){
#p= t.test(data2[i,sampleinfos[sampleindex[[1]],1]],data2[i,sampleinfos[sampleindex[[2]],1]])
p= t.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paired)
}else{
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paired)
}
data2[i,"pvalue"]=p$p.value
data2[i,"log2FC"]= log2(mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[1])]]))/mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[2])]])))
}
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paired)
i
as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]])
as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]])
?wilcox.test
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paired,alternative = "greater")
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = F,alternative = "greater")
paired
BarDiff <- function(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired){
############# R包载入##############################
if(!require(openxlsx)){
install.packages("openxlsx")
library(openxlsx)
}
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
#############表格读取#############################
readFile<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = F)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = F)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=F,colNames = F)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file,col_names = F) )
}
return(matrix)
}
readFile1<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=T,colNames = T)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file) )
rownames(matrix) <- matrix[,1]
matrix <- matrix[,-1]
}
return(matrix)
}
########数据准备########
Data_Prepration <- function(data,sampleinfos,groups,method,Method,log2fc,pvalue,paire){
Realign <- function(origin_matrix){
res = "["
df = c(paste('\"',colnames(origin_matrix)[1],'\"',sep = ""),paste('\"',colnames(origin_matrix)[2],'\"',sep = ""),paste('\"',colnames(origin_matrix)[3],'\"',sep = ""))
df <- as.character(df)
df <- paste(df,collapse = ",")
res <- paste(res,"[",df,"],",collapse = "")
for (i in 1:nrow(origin_matrix)) {
indata <- c(paste('\"',origin_matrix[i,1],'\"',sep = ""),origin_matrix[i,2],origin_matrix[i,3])
indata <- as.character(indata)
indata <- paste(indata,collapse = ",")
res <- paste(res,"[",indata,"],",collapse = "")}
res <- paste(substr(res, 1, nchar(res)-1),"]",collapse = "")
return(res)
}
#填充0值
data[data==0]=min(data[data!=0])*0.5
diffall=data.frame()
for (j in 1:length(rownames(groups)) ){
group=as.vector(groups[j,])
sampleindex<-lapply(group,function(x) {which(sampleinfos[,2] %in% x)})
data1=data[,sampleinfos[unlist(sampleindex),1]]
#数据筛选
############删去归一化后数值都一样和单组不同数值比例小于50%的物质########
testN<-data1
sdExclude<-NULL
for(i in rownames(testN)){
ratio_all<-NULL
for(sdCls in 1:length(sampleindex)){
colPick<-as.character(sampleinfos[sampleindex[[sdCls]],1])
ratio<-length(testN[i,][colPick][testN[i,][colPick]!=min(testN)])/length(testN[i,][colPick])
ratio_all<-c(ratio_all,ratio)
}
if(all(ratio_all<0.5)){
sdExclude=c(sdExclude,i)
}
}
final=row.names(testN)[!row.names(testN) %in% sdExclude]
data2=data1[final,]
z<-data2
z1 <- apply(z, 1, function(x) {
length(unique(x))
})
sdExclude<-NULL
for(i in rownames(z)){
sd_all<-NULL
for(sdCls in 1:length(sampleindex)){
colPick<-as.character(sampleinfos[sampleindex[[sdCls]],1])
sd1<-sd(z[i,colPick])
sd_all<-c(sd1,sd_all)
}
if(all(sd_all<=0)){
sdExclude=c(sdExclude,i)
}
}
final <- row.names(z)[!row.names(z) %in% sdExclude]
data2 <- z[z1 != 1,]
data2=data2[final,]
for (i in rownames(data2)){
if(method=="t_test"){
#p= t.test(data2[i,sampleinfos[sampleindex[[1]],1]],data2[i,sampleinfos[sampleindex[[2]],1]])
p= t.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paire)
}else{
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paire)
}
data2[i,"pvalue"]=p$p.value
data2[i,"log2FC"]= log2(mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[1])]]))/mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[2])]])))
}
data2[,"qvalue"]=p.adjust(data2[,"pvalue"], "BH")
#若后期想用其他算法，可替换
#data2[,"qvalue_BH"]=p.adjust(data2[,"pvalue"], "BH")
#data2[,"qvalue_fdr"]=p.adjust(data2[,"pvalue"], "fdr")
#data2[,"qvalue_BY"]=p.adjust(data2[,"pvalue"], "BY")
if (Method=="pvalue"){
data2$UPDOWN<-ifelse(data2$log2FC>=log2fc & data2$pvalue<=pvalue,"Up",
ifelse(data2$log2FC<=-log2fc & data2$pvalue<=pvalue,"Down","Not sig"))
}else{
data2$UPDOWN<-ifelse(data2$log2FC>=log2fc & data2$qvalue<=pvalue,"Up",
ifelse(data2$log2FC<=-log2fc & data2$qvalue<=pvalue,"Down","Not sig"))
}
write.table(data2, file=paste(group[1],"-vs-",group[2],".",method,".fillter.txt",sep = ""),sep="\t",quote=FALSE,row.names = T,col.names=NA)
write.csv(data2,file=paste(group[1],"-vs-",group[2],".",method,".fillter.CSV",sep = ""),quote=F,row.names=T)
diff=data.frame(paste(group[1],"-vs-",group[2],".",method,".fillter",sep = ""),sum(data2$UPDOWN=="Up"),sum(data2$UPDOWN=="Down"))
diffall=rbind(diffall,diff)
}
colnames(diffall) <- c("group",'UP', 'DOWN')
#write.table(diffall, file="Ttest.fillter.diff.txt",sep="\t",quote=FALSE,col.names=T,row.names=F)
Realigns=Realign(diffall)
#write.table(Realigns, file="Realigns.txt",sep="\t",quote=FALSE,col.names=F,row.names=F)
return(Realigns)
}
#############表格读取#############################
Data<-readFile1(datafile)
Sampleinfos<-readFile(sampleinfosfile)
Groups<-readFile(groupsfile)
############数据分析#######################
log2fc<-as.numeric(log2fc)
pvalue<-as.numeric(pvalue)
method1<-method
Method2<-Method
paired<-paired
Data_Pr<-Data_Prepration(Data,Sampleinfos,Groups,method1,Method2,log2fc,pvalue,paired)
return(Data_Pr)
}
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
BarDiff <- function(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired){
############# R包载入##############################
if(!require(openxlsx)){
install.packages("openxlsx")
library(openxlsx)
}
if(!require(readxl)){
install.packages("readxl")
library(readxl)
}
#############表格读取#############################
readFile<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = F)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = F)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=F,colNames = F)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file,col_names = F) )
}
return(matrix)
}
readFile1<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=T,colNames = T)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file) )
rownames(matrix) <- matrix[,1]
matrix <- matrix[,-1]
}
return(matrix)
}
########数据准备########
Data_Prepration <- function(data,sampleinfos,groups,method,Method,log2fc,pvalue,paire){
Realign <- function(origin_matrix){
res = "["
df = c(paste('\"',colnames(origin_matrix)[1],'\"',sep = ""),paste('\"',colnames(origin_matrix)[2],'\"',sep = ""),paste('\"',colnames(origin_matrix)[3],'\"',sep = ""))
df <- as.character(df)
df <- paste(df,collapse = ",")
res <- paste(res,"[",df,"],",collapse = "")
for (i in 1:nrow(origin_matrix)) {
indata <- c(paste('\"',origin_matrix[i,1],'\"',sep = ""),origin_matrix[i,2],origin_matrix[i,3])
indata <- as.character(indata)
indata <- paste(indata,collapse = ",")
res <- paste(res,"[",indata,"],",collapse = "")}
res <- paste(substr(res, 1, nchar(res)-1),"]",collapse = "")
return(res)
}
#填充0值
data[data==0]=min(data[data!=0])*0.5
diffall=data.frame()
for (j in 1:length(rownames(groups)) ){
group=as.vector(groups[j,])
sampleindex<-lapply(group,function(x) {which(sampleinfos[,2] %in% x)})
data1=data[,sampleinfos[unlist(sampleindex),1]]
#数据筛选
############删去归一化后数值都一样和单组不同数值比例小于50%的物质########
testN<-data1
sdExclude<-NULL
for(i in rownames(testN)){
ratio_all<-NULL
for(sdCls in 1:length(sampleindex)){
colPick<-as.character(sampleinfos[sampleindex[[sdCls]],1])
ratio<-length(testN[i,][colPick][testN[i,][colPick]!=min(testN)])/length(testN[i,][colPick])
ratio_all<-c(ratio_all,ratio)
}
if(all(ratio_all<0.5)){
sdExclude=c(sdExclude,i)
}
}
final=row.names(testN)[!row.names(testN) %in% sdExclude]
data2=data1[final,]
z<-data2
z1 <- apply(z, 1, function(x) {
length(unique(x))
})
sdExclude<-NULL
for(i in rownames(z)){
sd_all<-NULL
for(sdCls in 1:length(sampleindex)){
colPick<-as.character(sampleinfos[sampleindex[[sdCls]],1])
sd1<-sd(z[i,colPick])
sd_all<-c(sd1,sd_all)
}
if(all(sd_all<=0)){
sdExclude=c(sdExclude,i)
}
}
final <- row.names(z)[!row.names(z) %in% sdExclude]
data2 <- z[z1 != 1,]
data2=data2[final,]
for (i in rownames(data2)){
if(method=="t_test"){
#p= t.test(data2[i,sampleinfos[sampleindex[[1]],1]],data2[i,sampleinfos[sampleindex[[2]],1]])
p= t.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = paire)
}else{
if (paire=="T"){
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = T)
}else{
p= wilcox.test(as.numeric(data2[i,sampleinfos[sampleindex[[1]],1]]),as.numeric(data2[i,sampleinfos[sampleindex[[2]],1]]),paired = F)
}
}
data2[i,"pvalue"]=p$p.value
data2[i,"log2FC"]= log2(mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[1])]]))/mean(as.numeric(data2[i,colnames(data)[unlist(sampleindex[2])]])))
}
data2[,"qvalue"]=p.adjust(data2[,"pvalue"], "BH")
#若后期想用其他算法，可替换
#data2[,"qvalue_BH"]=p.adjust(data2[,"pvalue"], "BH")
#data2[,"qvalue_fdr"]=p.adjust(data2[,"pvalue"], "fdr")
#data2[,"qvalue_BY"]=p.adjust(data2[,"pvalue"], "BY")
if (Method=="pvalue"){
data2$UPDOWN<-ifelse(data2$log2FC>=log2fc & data2$pvalue<=pvalue,"Up",
ifelse(data2$log2FC<=-log2fc & data2$pvalue<=pvalue,"Down","Not sig"))
}else{
data2$UPDOWN<-ifelse(data2$log2FC>=log2fc & data2$qvalue<=pvalue,"Up",
ifelse(data2$log2FC<=-log2fc & data2$qvalue<=pvalue,"Down","Not sig"))
}
write.table(data2, file=paste(group[1],"-vs-",group[2],".",method,".fillter.txt",sep = ""),sep="\t",quote=FALSE,row.names = T,col.names=NA)
write.csv(data2,file=paste(group[1],"-vs-",group[2],".",method,".fillter.CSV",sep = ""),quote=F,row.names=T)
diff=data.frame(paste(group[1],"-vs-",group[2],".",method,".fillter",sep = ""),sum(data2$UPDOWN=="Up"),sum(data2$UPDOWN=="Down"))
diffall=rbind(diffall,diff)
}
colnames(diffall) <- c("group",'UP', 'DOWN')
#write.table(diffall, file="Ttest.fillter.diff.txt",sep="\t",quote=FALSE,col.names=T,row.names=F)
Realigns=Realign(diffall)
#write.table(Realigns, file="Realigns.txt",sep="\t",quote=FALSE,col.names=F,row.names=F)
return(Realigns)
}
#############表格读取#############################
Data<-readFile1(datafile)
Sampleinfos<-readFile(sampleinfosfile)
Groups<-readFile(groupsfile)
############数据分析#######################
log2fc<-as.numeric(log2fc)
pvalue<-as.numeric(pvalue)
method1<-method
Method2<-Method
paired<-paired
Data_Pr<-Data_Prepration(Data,Sampleinfos,Groups,method1,Method2,log2fc,pvalue,paired)
return(Data_Pr)
}
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
datafile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest1.eg.xls"
sampleinfosfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest3.eg.xls"
groupsfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest2.eg.xls"
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
datafile<-"E:/panpan/5. 两组配对检验/data/ttest1.eg.txt"
sampleinfosfile<-"E:/panpan/5. 两组配对检验/data/ttest3.eg.txt"
groupsfile<-"E:/panpan/5. 两组配对检验/data/ttest2.eg.txt"
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
datafile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest1.eg.txt"
sampleinfosfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest3.eg.txt"
groupsfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest2.eg.txt"
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
paired="F"      #####是否进行配对检验,T,F,默认为F
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
datafile<-"E:/panpan/5. 两组配对检验/data/ttest1.eg.xlsx"
sampleinfosfile<-"E:/panpan/5. 两组配对检验/data/ttest3.eg.xlsx"
groupsfile<-"E:/panpan/5. 两组配对检验/data/ttest2.eg.xlsx"
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
datafile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest1.eg.xlsx"
sampleinfosfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest3.eg.xlsx"
groupsfile<-"E:/panpan/1. 柱状图/5. 两组配对检验/data/ttest2.eg.xlsx"
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
paired="T"      #####是否进行配对检验,T,F,默认为F
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
####修改成字符串#####
method="t_test"    ### t_test,wilcox_test,默认为t_test
#####命令行#####
BarDiff(datafile,sampleinfosfile,groupsfile,method,Method,log2fc,pvalue,paired)
HeatmapDiff<- function(datafile,groups){
############# R包载入##############################
if(!require(openxlsx)){
install.packages("openxlsx")
library(openxlsx)}
if(!require(readxl)){
install.packages("readxl")
library(readxl)}
readFile<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = F)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = F)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=F,colNames = F)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file,col_names = F) )
}
return(matrix)
}
readFile1<- function(data_file){
Read_file <- substr(data_file,nchar(data_file)-3,nchar(data_file))
if (Read_file== ".csv"){
matrix <- read.csv(data_file,header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file == ".txt"){
matrix <- read.table(data_file,sep = "\t",header = TRUE,row.names = 1,check.names=FALSE)
}else if (Read_file== "xlsx"){
matrix <- read.xlsx(data_file,sheet = 1,sep="\t",rowNames=T,colNames = T)
}else if(Read_file ==  ".xls" ) {
matrix <- as.data.frame(read_excel(data_file) )
rownames(matrix) <- matrix[,1]
matrix <- matrix[,-1]
}
return(matrix)
}
####数据转换####
Swtich <- function(rawdata,Sampleinfo){
Realign1 <- function(df){
df1="["
for (i in df ){
df1=paste(df1,'\"',i,'\",',collapse = "")
}
df1<-gsub(",$","]",df1)
return(df1)
}
Realign <- function(origin_matrix){
res = "["
for (i in 1:nrow(origin_matrix)) {
for (j in 1:6) {
indata <- c(i-1,j-1,origin_matrix[i,j])
indata <- as.character(indata)
indata <- paste(indata,collapse = ",")
res <- paste(res,"[",indata,"],",collapse = "")}}
res <- paste(substr(res, 1, nchar(res)-1),"]",collapse = "")
return(res)
}
Realign2<-function(Data){
reps = "["
for (i in 1:length(rownames(Data))){
Data1 <- c(1,Data[i,"pvalue"],Data[i,"log2fc"])
Data1 <- as.character(Data1)
Data1 <- paste(Data1,collapse = ",")
reps <- paste(reps,"[",Data1,"],",collapse = "")
}
reps <- paste(substr(reps, 1, nchar(reps)-1),"]",collapse = "")
return(reps)
}
####空值替换####
rawdata[is.na(rawdata)]=0
rawdata[rawdata=="NA"]=0
rawdata[is.null(rawdata)]=0
####标题####
###传入的x轴组别参数####
n=length(colnames(rawdata))-2
Xdat = colnames(rawdata)[1:n]
xdata <- Realign1(Xdat)
###传入的组别参数####
df2=unique(Sampleinfo[,2])
xdata2<-Realign1(df2)
###传入的y轴组别参数####
df3= rownames(rawdata)
ydata<-Realign1(df3)
###传入的data####
data11 <- Realign(rawdata)
###传入的data####
raweqdata<-as.data.frame(t(rawdata[1:n]))
raweqdata$group=Sampleinfo[rownames(raweqdata),2]
count<-0
resps="["
for (a in raweqdata$group){
if ( a == unique(Sampleinfo$group)[1]){
resp=c(0,count,1)
resp <- paste(resp,collapse = ",")
resp <- paste("[",resp,"],",collapse = "")
}else{
resp=c(0,count,2)
resp <- paste(resp,collapse = ",")
resp <- paste("[",resp,"],",collapse = "")
}
count<-count+1
resps <- paste(resps, resp,sep = "")
}
data22<-gsub(",$","]",resps)
######
data33<-rawdata[,c("pvalue","log2fc")]
Data3=Realign2(data33)
return(c(xdata,xdata2,ydata,data11,data22,Data3))
}
######数据读取#####
data <- readFile1(datafile)
sampleinfo <- readFile(groups)
colnames(sampleinfo)<-c("name","group")
rownames(sampleinfo)<-sampleinfo[,1]
#####数据转换####
Data<-Swtich(data,sampleinfo)
result_data <- list(Xdata=Data[1],Xdata1=Data[2],Ydata=Data[3],data1=Data[4],
data2=Data[5],data3=Data[6])
return(result_data)
}
datafile<-"E:/panpan/2. 聚类热图/data.csv"
groups<-"E:/panpan/2. 聚类热图/group.csv"
#运行命令
HeatmapDiff(datafile,groups)
datafile<-"E:/panpan/2. 聚类热图/data.xlsx"
groups<-"E:/panpan/2. 聚类热图/group.xlsx"
#运行命令
HeatmapDiff(datafile,groups)
datafile<-"E:/panpan/2. 聚类热图/data.txt"
groups<-"E:/panpan/2. 聚类热图/group.txt"
#运行命令
HeatmapDiff(datafile,groups)
datafile<-"E:/panpan/2. 聚类热图/data.xls"
groups<-"E:/panpan/2. 聚类热图/group.xls"
#运行命令
HeatmapDiff(datafile,groups)
